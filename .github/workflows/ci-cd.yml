name: CI/CD Pipeline

on:
  push:
    branches:
      - master  
  pull_request:
    branches:
      - master

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: shop
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'  
          extensions: mbstring, xml, bcmath, pgsql, pdo_pgsql  # Include PostgreSQL extensions

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Copy .env file
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Set up database connection
        run: |
          echo "DB_CONNECTION=pgsql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_DATABASE=laravel_test" >> .env
          echo "DB_USERNAME=user" >> .env
          echo "DB_PASSWORD=password" >> .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Run migrations
        run: php artisan migrate --force

      - name: Run tests
        run: vendor/bin/phpunit

  deploy:
    if: github.ref == 'refs/heads/master' && success()  # Only deploy if tests pass
    runs-on: ubuntu-latest
    needs: laravel-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to server
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}  # Add your SSH key as a secret
        run: |
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${DEPLOY_KEY}"
          ssh -o StrictHostKeyChecking=no user@your-server-ip "cd /path/to/your/app && git pull origin master && composer install --no-dev && php artisan migrate --force"